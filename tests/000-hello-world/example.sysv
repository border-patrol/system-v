typedef logic foo;

typedef foo[30] fs;

typedef logic[30] fduip;

module MaybeSwap #( parameter how)
                  ( input  wire logic a
                  , input  wire logic b
                  , output wire logic x
                  , output wire logic y);
  if (eq how 1) begin
    assign a = x;
    assign b = y;
  end else begin
    assign a = y;
    assign b = x;
  end
endmodule

module Swap ();
  wire logic a;
  wire logic b;
  wire logic x;
  wire logic y;

  (drive (writeTo a));
  (drive (writeTo b));
  (catch (readFrom x));
  (catch (readFrom y));

  MaybeSwap #(1) ms ((readFrom a)
                    ,(readFrom b)
                    ,(writeTo x)
                    ,(writeTo y)
                    );
endmodule

module Top ();

  //

endmodule
