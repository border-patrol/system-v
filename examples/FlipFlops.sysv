// Approximations as we do not support registers.

module FlipFlopDSync
  ( clock     input  wire logic clk
  , reset low input  wire logic resetn // active low reset
  , data      input  wire logic d
  , data      output wire logic q
  );

  // always @ (posedge clk)
  if resetn
  begin
    assign q = d;
  end
  else
  begin
    drive q data;
  end
endmodule

module FlipFlopDAsync
  ( clock     input  wire logic clk
  , reset low input  wire logic resetn
  , data      input  wire logic d
  , data      output wire logic q
  );

  //always @ (posedge clk or negedge rstn)
  if resetn
  begin
    assign q = d;
  end
  else
  begin
    drive q data;
  end
endmodule

module Top ();


endmodule
